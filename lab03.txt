1. Scrieți o interogare pentru a afișa data de azi. Etichetați coloana "Astazi".
	SELECT SYSDATE AS "ASTAZI" FROM DUAL;
	SELECT CURRENT_DATE "ASTAZI" FROM DUAL;

2. Pentru fiecare student afișați numele, data de nastere si numărul de luni între data curentă și data nașterii.
	SELECT nume, data_nastere, months_between(SYSDATE ,data_nastere) FROM studenti;
	SELECT nume, data_nastere, floor(months_between(SYSDATE ,data_nastere)) FROM studenti;

3. Afișați ziua din săptămână în care s-a născut fiecare student.
	SELECT TO_CHAR(data_nastere,'day','NLS_DATE_LANGUAGE= english') FROM studenti;

4. Utilizând functia de concatenare, obțineți pentru fiecare student textul 'Elevul <prenume> este in grupa <grupa>'.
	SELECT CONCAT(CONCAT(CONCAT('Elevul ',nume),' este in grupa '),grupa) FROM studenti;

5. Afisati valoarea bursei pe 10 caractere, completand valoarea numerica cu caracterul $.
	SELECT RPAD(bursa,10,'$') FROM studenti where bursa is not NULL;
	SELECT RPAD(NVL(bursa,'0'),10,'$') FROM studenti;

6. Pentru profesorii al căror nume începe cu B, afișați numele cu prima litera mică si restul mari, precum și lungimea (nr. de caractere a) numelui.
	SELECT CONCAT(LOWER(SUBSTR(nume,1,1)),UPPER(SUBSTR(nume,2))) FROM profesori WHERE nume LIKE 'B%';

7. Pentru fiecare student afișați numele, data de nastere, data la care studentul urmeaza sa isi sarbatoreasca ziua de nastere si prima zi de duminică de dupa.
	SELECT nume, data_nastere,ADD_MONTHS(data_nastere, (FLOOR(MONTHS_BETWEEN(SYSDATE, data_nastere )/12)+1)*12 ),NEXT_DAY(ADD_MONTHS(data_nastere, (FLOOR(MONTHS_BETWEEN(SYSDATE, data_nastere )/12)+1)*12 ), 'Sunday') FROM studenti;
	SELECT nume, data_nastere, ADD_MONTHS(data_nastere,CEIL(MONTHS_BETWEEN(CURRENT-DATE, data_nastere)/12)*12), NEXT_DAY(CEIL(MONTHS_BETWEEN(CURRENT-DATE, data_nastere)/12)*12),'SUNDAY');

8. Ordonați studenții care nu iau bursă în funcție de luna cand au fost născuți; se va afișa doar numele, prenumele și luna corespunzătoare datei de naștere.
	SELECT nume, data_nastere, to_char(data_nastere,'mm') FROM studenti;

9. Pentru fiecare student afișati numele, valoarea bursei si textul: 'premiul 1' pentru valoarea 450, 'premiul 2' pentru valoarea 350, 'premiul 3' pentru valoarea 250 și 'mentiune' pentru cei care nu iau bursa. Pentru cea de a treia coloana dati aliasul "Premiu".
	SELECT nume, bursa, DECODE(bursa, 450,' premiul 1', 350, 'premiul 2', 250, 'premiul 3', NULL, 'mentiune') FROM studenti;

10. Afişaţi numele tuturor studenților înlocuind apariţia literei i cu a şi apariţia literei a cu i.
	SELECT nume, translate(nume,'iaIA','aiAI') FROM studenti;

11. Afișați pentru fiecare student numele, vârsta acestuia la data curentă sub forma '<x> ani <y> luni și <z> zile' (de ex '19 ani 3 luni și 2 zile') și numărul de zile până își va sărbători (din nou) ziua de naștere.
	SELECT nume, concat(floor(months_between(sysdate,data_nastere)/12),' ani ') ,12-to_char(data_nastere,'mm') FROM studenti;  !! NU ESTE COMPLET;
	+ !!! pe tel !!!

12. Presupunând că în următoarea lună bursa de 450 RON se mărește cu 10%, cea de 350 RON cu 15% și cea de 250 RON cu 20%, afișați pentru fiecare student numele acestuia, data corespunzătoare primei zile din luna urmatoare și valoarea bursei pe care o va încasa luna următoare. Pentru cei care nu iau bursa, se va afisa valoarea 0.
	SELECT nume, TRUNC(ADD_MONTHS(SYSDATE,1), 'MM'), DECODE(bursa,450,bursa+bursa*0.10,350,bursa+bursa*0.15,250 ,bursa+bursa*0.2,NULL,0) AS "bursa noua" FROM studenti;

13. Pentru studentii bursieri (doar pentru ei) afisati numele studentului si bursa in stelute: fiecare steluta valoreaza 50 RON. In tabel, alineati stelutele la dreapta.
	SELECT nume,substr(rpad(bursa,3+bursa/50,'*'),4) FROM studenti where bursa is not null;
	SELECT nume, bursa, LPAD(LPAD('*', (bursa/50), '*'), 10, '_') "bursa noua" FROM studenti WHERE bursa IS NOT NULL;

email: cornei.laura10@gmail.com
