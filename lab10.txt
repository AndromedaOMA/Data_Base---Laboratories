1. Cum poate fi utilizată o secvență la inserare? Răspundeți creând o secvență care sa vă ajute sa inserați noi cursuri cu id unic, cu intrari consecutive crescătoare cu pasul 1. Inserati 3 cursuri noi cu id-ul generat de secventa.
	CREATE SEQUENCE seq INCREMENT BY 1 START WITH 30 MAXVALUE100;
		INSERT INTO cursuri VALUES( seq.NEXVAL,'FAI',1,1,5)
		INSERT INTO cursuri VALUES( seq.NEXVAL,'GRAFURI',1,2,5)
		INSERT INTO cursuri VALUES( seq.NEXVAL,'ACSO',2,1,5)

+UPDATE
1. Actualizati valoarea bursei pentru studentii care au măcar o notă de 10. Acestia vor primi ca bursa 500RON.
	UPDATE studenti SET bursa=500 WHERE nr_matricol IN (SELECT s.nr_matricol FROM studenti s JOIN note n ON s.nr_matricol=n.nr_matricol WHERE n.valoare=10);

2. Toti studentii primesc o bursa egala cu 100*media notelor lor. Efectuati modificarile necesare.
	UPDATE studenti SET bursa=(SELECT AVG(valoare)*100 FROM note);

+DELETE
1. Stergeti toti studentii care nu au nici o nota.
	DELETE FROM studenti WHERE nr_matricol IN (SELECT s.nr_matricol FROM studenti s LEFT JOIN note n ON s.nr_matricol=n.nr_matricol WHERE n.valoare IS NULL);

+CREATE
1. Executati comanda ROLLBACK. Creati apoi o tabelă care să stocheze numele, prenumele, bursa si mediile studentilor.
	CREATE TABLE INFRSTUD(nume, prenume, bursa, medie) AS (SELECT nume, prenume, bursa, AVG(n.valoare) FROM stidenti s JOIN note n ON s.nr_matricol=n.nr_matricol GROUP BY s.nume, s.prenume, s.bursa, s.nr_matricol;

+ALTER TABLE
1. Adăugați constrângerile de tip cheie primară pentru tabelele Studenti, Profesori, Cursuri.
	ALTER TABLE studenti ADD CONSTRAINT pk_studenti PRIMARY KEY(nr_matricol);
	DELETE FROM profeori WHERE TRIM(id_prof) IN ('p20','p21');
	ALTER TABLE profesori ADD CONSTRAINT pk_profesori PRIMARY KEY(id_prof);
	ALTER TABLE cursuri ADD CONSTRAINT pk_cursuri PRIMARY KEY(id_curs);
	ALTER TABLE note ADD CONSTRAINT fk_cursuri FOREIGN KEY(id_curs) REFERENCES cursuri(id_curs);
	ALTER TABLE didactic ADD CONSTRAINT fk_cursuri FOREIGN KEY(id_curs) REFERENCES cursuri(id_curs) ON DELETE CASCADE;
	ALTER TABLE didactic ADD CONSTRAINT fk_profesori FOREIGN KEY(id_prof) REFERENCES profesori(id_prof) ON DELETE SET NULL;


2. Adăugați constrângerile referențiale pentru tabelele Note și Didactic. La ștergerea unui profesor din tabela Profesori, în tabela Didactic id-ul profesorului șters va deveni null. La stergerea unui curs din tabela Cursuri, in tabela Didactic va fi stearsă înregistrarea care referențiază cursul șters. Scrieți comenzi de ștergere înregistrări pentru tabelele referențiate și studiați comportamentul.
	

3. Impuneți constrângerea ca un student să nu aibă mai mult de o notă la un curs.
	ALTER TABLE note ADD CONSTRAINT max_o_nota_pe_curs 
      UNIQUE(nr_matricol, id_curs);

4. Impuneți constrângerea ca valoarea notei să fie cuprinsă între 1 și 10.
	ALTER TABLE note ADD CONSTRAINT note_intre_1_si_10
      CHECK(valoare >=1 AND valoare <=10);

+TRANZACTIONS
1. Asigurati-va că începeți o nouă tranzacție.
	SAVEPOINT inceput;

2. Ștergeți toate înregistrările din tabela Profesori.
	DELETE * FROM prfesori

3. Inserați un profesor.
	INSERT INTO profesori VALUES(124,'Popescu','Marian','Conf');

4. Marcați starea curentă ca 's1'.
	SAVEPOINT s1;

5. Schimbați numele profesorului inserat.	
	UPDATE profesori SET nume='Pop' WHERE id_prof=124;

6. Vizualizați datele.
	SELECT * FROM profesori;

7. Reveniți la starea s1.
	ROLLBACK TO SAVEPOINT p1

8. Vizualizați datele.
	SELECT * FROM profesori;

9. Reveniția la starea de dinaintea ștergerii.
	ROLLBACK TO SAVEPOINT inceput;
